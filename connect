#! /bin/bash

# declare -r login=${1:-level00}

source "./automate"

main() {
    init_key "$1" "snow-crash"
    if [[ "$0" == "./connect" ]]; then
        connect "$1" "$2"
    elif [[ "$0" == "./send" ]]; then
        send "$1" "$2"
    fi
}

declare -r IP="192.168.56.102"
declare -r PORT=4242
declare -r SSH_DIR="${HOME}/.ssh/"

init_key() {
    local -r ssh_key=${2:-snow-crash}
    local -r ssh_path="${SSH_DIR}${ssh_key}"
    local    has_key=$(ls ${ssh_path} 2> /dev/null)

    if [[ -z "$1" ]]; then
        printf "usage: init_key login key_name\n"
        exit 1
    fi
    if [[ -z "$has_key" ]];then
        ssh-keygen -f "$ssh_path" -N ""
    fi
    get_pass "$1"
    cat "${ssh_path}.pub" | ssh "${1}@${IP}" -p "$PORT" "chmod 755 . && mkdir -p ~/.ssh && chmod 755 ~/.ssh && cat > ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"
}

get_pass() {
    local -r default="level00"
    local    pass="$default"

    if [[ -z "$1" ]]; then
        printf "usage: get_pass login [command]\n"
        exit 1
    fi
    if [[ "$1" != "$default" ]]; then
        pass=$(find_pass "$1") ||
            { printf "flag not find for '%s' user.\nexit.\n" "$1"; exit 1; }
    fi
    echo $pass | xclip -selection c -in
}

find_pass() {
    local number=$(( 10#${1##*[a-z]} - 1))
    local dir=${1%%[0-9]*}$( printf "%02d" $number)

    cat "./$dir/flag" 2> /dev/null
    return $?
}

connect() {
    if [[ -z "$1" ]]; then
        printf "usage: connect login [command]\n"
        exit 1
    fi
    get_pass "$1"
    ssh "${1}@${IP}" -p "$PORT" "$2"
}

send() {
    if [[ -z "$2" ]]; then
        printf "usage; send login file\n"
        exit 1
    fi
    get_pass "$1"
    scp -P "$PORT" "$2" "${1}@${IP}:/home/user/${1}"
}

main "$@"